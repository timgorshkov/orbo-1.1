import AppShell from '@/components/app-shell'
import { requireOrgAccess } from '@/lib/orgGuard'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { notFound } from 'next/navigation'

export default async function TelegramGroupPage({ 
  params 
}: { 
  params: { org: string; id: string } 
}) {
  const { supabase } = await requireOrgAccess(params.org)
  
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
  const { data: group, error } = await supabase
    .from('telegram_groups')
    .select('*')
    .eq('id', params.id)
    .eq('org_id', params.org)
    .single()
  
  if (error || !group) {
    return notFound()
  }
  
  // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ –≥—Ä—É–ø–ø–µ
  const { data: events } = await supabase
    .from('activity_events')
    .select('*')
    .eq('org_id', params.org)
    .eq('tg_group_id', group.tg_chat_id)
    .order('created_at', { ascending: false })
    .limit(20)

  // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø
 const { data: telegramGroups } = await supabase
    .from('telegram_groups')
    .select('id, title, tg_chat_id')
    .eq('org_id', params.org)
    .order('title')
  
  return (
    <AppShell orgId={params.org} currentPath={`/app/${params.org}/telegram/groups/${params.id}`} telegramGroups={telegramGroups || []}>
      <div className="mb-6">
        <h1 className="text-2xl font-semibold">{group.title || `–ì—Ä—É–ø–ø–∞ ${group.tg_chat_id}`}</h1>
      </div>
      
      <div className="grid gap-6 md:grid-cols-2">
        <Card>
          <CardHeader>
            <CardTitle>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–µ</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-2">
              <div>
                <span className="text-sm text-neutral-500">ID –≥—Ä—É–ø–ø—ã:</span>
                <div>{group.tg_chat_id}</div>
              </div>
              
              <div>
                <span className="text-sm text-neutral-500">–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:</span>
                <div className="flex items-center">
                  <span 
                    className={`inline-block w-2 h-2 rounded-full mr-2 ${
                      group.bot_status === 'connected' ? 'bg-green-500' : 'bg-amber-500'
                    }`} 
                  />
                  <span>
                    {group.bot_status === 'connected' ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–í –æ–∂–∏–¥–∞–Ω–∏–∏'}
                  </span>
                </div>
              </div>
              
              {group.invite_link && (
                <div>
                  <span className="text-sm text-neutral-500">–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</span>
                  <div>
                    <a href={group.invite_link} target="_blank" rel="noopener noreferrer" className="text-blue-600 break-all">
                      {group.invite_link}
                    </a>
                  </div>
                </div>
              )}
              
              <div>
                <span className="text-sm text-neutral-500">–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:</span>
                <div>
                  {group.last_sync_at ? new Date(group.last_sync_at).toLocaleString('ru') : '–ù–∏–∫–æ–≥–¥–∞'}
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
        
        <Card>
          <CardHeader>
            <CardTitle>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è</CardTitle>
          </CardHeader>
          <CardContent>
            {events && events.length > 0 ? (
              <div className="space-y-3">
                {events.map(event => (
                  <div key={event.id} className="border-b pb-2">
                    <div className="text-sm">
                      {event.type === 'message' && 'üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ'}
                      {event.type === 'join' && 'üëã –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫'}
                      {event.type === 'leave' && 'üö∂ –£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –≥—Ä—É–ø–ø—É'}
                      {event.type === 'command' && 'ü§ñ –ö–æ–º–∞–Ω–¥–∞ –±–æ—Ç–∞'}
                    </div>
                    <div className="text-xs text-neutral-500">
                      {new Date(event.created_at).toLocaleString('ru')}
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-4 text-neutral-500">
                –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </AppShell>
  )
}
